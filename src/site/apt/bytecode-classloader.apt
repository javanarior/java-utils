    ---
    Bytecode Classloader
    ---
    ---
    ---

Bytecode Classloader

  Sometimes it's necessary or more comfortably to generate classes. To use this classes, the classes must
be loaded into to the JVM, for that you need a classloader. Usually the method ClassLoader#defineClass() is
used for that purpose. But this Method has the scope protected, so you can't access it outside of the class hierarchy.
For this reason the ByteCodeClassLoader exists. To load a class you need the bytecode and the name of the class in the
binary format  (JSL ยง13.1, {{{http://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html#jls-13.1}}}), which means
the full qualified class name, separated with dots ('.').

* Usage

  To get a instance of the Classloader you call

%{include|set-first-line=1|snippet=getClassLoader|source=src/example/java/de/javanarior/utils/example/lang/ByteCodeClassLoaderExample.java}

  Then your bytecode could be loaded with

%{include|set-first-line=1|snippet=loadClass|source=src/example/java/de/javanarior/utils/example/lang/ByteCodeClassLoaderExample.java}

  or with

%{include|set-first-line=1|snippet-start-offset=0|snippet=loadClassWithContainer|source=src/example/java/de/javanarior/utils/example/lang/ByteCodeClassLoaderExample.java}

  ByteCodeContainer is a container objects which hold the class name and the bytecode.
